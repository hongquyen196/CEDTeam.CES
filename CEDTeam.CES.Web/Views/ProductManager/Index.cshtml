@model int

<style>
    table{
        clear: both;
        border-collapse: collapse;
        table-layout: fixed; 
        word-wrap:break-word; 
    }
    table.dataTable tbody th, table.dataTable tbody td{
        padding: 2px 2px;
    }
    tr[role=row].even{
    }
    tr[role=row].odd{
        background: #f9f9f9 !important;
    }
    tr[role=row]:hover{
        background: #f6f6f6 !important; 
    }
</style>
<div class="text-center">
    <table id="product-datatable" style="width:100%">
        <thead>
            <tr>
                <th>Id</th>
                <th>Mã sản phẩm</th>
                <th>Tên sản phẩm</th>
                <th>Giá <small>(VND)</small></th>
                <th>Ngày tạo</th>
                <th>Số lượng</th>
                <th>Danh mục</th>
                <th>Trang bán</th>
                <th>Đã bán</th>
                <th>Lượt đánh giá</th>
                <th>Giảm giá</th>
                <th>Ngày cập nhật</th>
                <th>Bình quân thu nhập ngày<small>(VND)</small></th>
            </tr>
        </thead>
    </table>
</div>
<script>
    @{ 
        var url = "../product-manager/get-product";
        switch(Model)
        {
            case 1: url = "../product-manager/get-shopee-product"; break;
            case 2: url = "../product-manager/get-lazada-product"; break;
            case 3: url = "../product-manager/get-tiki-product"; break;
            case 4: url = "../product-manager/get-sendo-product"; break;
        }
    }
    var getProductUrl = '@url';
    $(function () {
        var table = $('#product-datatable').DataTable({
                    "responsive": true,
            "dom": 'Bfrtip',
            "buttons": [
               'pageLength', 'copy', 'csv', 'excel', 'pdf', 'print'
            ],
            "scrollX": true,
            "processing": true,
            "serverSide": true,
            "ajax": {
                url: getProductUrl,
                type: "POST",
                data: function (d) {
                    d._csrf = "<?= Yii::$app->request->getCsrfToken(); ?>";
                },
                dataFilter: function (data) {
                    var json = jQuery.parseJSON(data);
                    console.log(json);
                    json.recordsTotal = json.recordsTotal;
                    json.recordsFiltered = json.recordsFiltered;
                    json.data = json.data;
                    return JSON.stringify(json);
                }
            },
            "columnDefs": [
                { targets: 0, className: "text-center" },
                { width: 100, targets: 1, className: "text-center" },
                { width: 300, targets: 2, className: "text-left"},
                { width: 80, targets: 3, className: "text-right" },
                { width: 200, targets: 4, className: "text-center" },
                { width: 80, targets: 5, className: "text-right" },
                { width: 120, targets: 6, className: "text-center" },
                { width: 60, targets: 7, className: "text-center" },
                { width: 80, targets: 8, className: "text-right" },
                { width: 50, targets: 9, className: "text-center" },
                { width: 50, targets: 10, className: "text-center" },
                { width: 200, targets: 11, className: "text-right" },
                { width: 50, targets: 12, className: "text-right" },
            ],
            fixedColumns: true,
            "columns": [
                { "data": "id" },
                { "data": "productId" },
                { "data": null, render: function ( data, type, row ) {

                    return '<a href="' + data.url + '" target="_blank">' + data.name + '</a>';
                }
                },
                { "data": null, render: function ( data, type, row ) {
                    var price = numeral(data.price).format('0,0');
                    return price;
                }
                },
                { "data": "createdDate" },
                { "data": "quantity" },
                { "data": "categoryName" },
                { "data": "siteName" },
                { "data": "quantitySold" },
                { "data": "commentCount" },
                {
                    "data": null, render: function (data, type, row) {
                    var discount = (data.discount).replace('-', '');
                    return discount;
                }
                },
                { "data": "updatedDateString" },
                {
                    "data": null, render: function (data, type, row) {
                        var price = numeral(data.average).format('0,0');
                        return price;
                    }
                }
            ]
            });
    });
</script>